function net = InitializeTextonNetwork( input_args )

f=1/100 ;
net.layers = {} ;

%%

net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(11,11,1,64, 'single'),...
                           'biases', zeros(1,64,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;
 % ESTA SI FUNCIONA, PARA FUTURO                   
% net.layers{end+1} = struct('type', 'conv', ...
%                            'filters',f*randn(7,7,64,64, 'single'),...
%                            'biases', zeros(1,64,'single'), ...
%                            'stride', 1, ...     					   
%                            'pad', 0) ;
% ABLATION 2                       
net.layers{end+1} = struct('type', 'pool', ...
                            'method', 'max', ...
                            'pool', [4 4], ...
                            'stride', 4, ...
                            'pad', 0) 
                       
net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(5,5,64,128, 'single'),...
                           'biases', zeros(1,128,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;  
 % ablation 1                      
net.layers{end+1} = struct('type', 'relu') 
                                              
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [4 4], ...
                           'stride', 4, ...
                           'pad', 0) ;     
                       
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(2,2,128,25, 'single'),...
                           'biases', zeros(1,25,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;

                       %
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(1,1,25,50, 'single'),...
                           'biases', zeros(1,50,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') 

%% Ultima capa
net.layers{end+1} = struct('type', 'softmaxloss') ;



end
